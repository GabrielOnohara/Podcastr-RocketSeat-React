{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gabak\\\\OneDrive\\\\WorkPlace\\\\WebProjects\\\\podcastrnext\\\\src\\\\components\\\\Player\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { usePlayer } from \"../../contexts/PlayerContext\";\nimport styles from \"./styles.module.scss\";\nimport Image from \"next/image\";\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { convertDurationToTimeString } from \"../../utils/convertDurationToTimeString\";\nexport function Player() {\n  _s();\n\n  var _episode$duration;\n\n  var audioRef = useRef(null);\n\n  var _useState = useState(0),\n      progress = _useState[0],\n      setProgress = _useState[1];\n\n  var _usePlayer = usePlayer(),\n      episodeList = _usePlayer.episodeList,\n      currentEpisodeIndex = _usePlayer.currentEpisodeIndex,\n      isPlaying = _usePlayer.isPlaying,\n      togglePlay = _usePlayer.togglePlay,\n      setPlayingState = _usePlayer.setPlayingState,\n      playNext = _usePlayer.playNext,\n      playPrevious = _usePlayer.playPrevious,\n      hasPrevious = _usePlayer.hasPrevious,\n      hasNext = _usePlayer.hasNext,\n      isLooping = _usePlayer.isLooping,\n      toggleLoop = _usePlayer.toggleLoop,\n      isShuffling = _usePlayer.isShuffling,\n      toggleShuffle = _usePlayer.toggleShuffle;\n\n  var episode = episodeList[currentEpisodeIndex];\n\n  function setupProgressListener() {\n    audioRef.current.currentTime = 0;\n    audioRef.current.addEventListener('timeupdate', function () {\n      setProgress(Math.floor(audioRef.current.currentTime));\n    });\n  }\n\n  function handleSeek(amount) {\n    audioRef.current.currentTime = amount;\n    setProgress(amount);\n  }\n\n  useEffect(function () {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"Tocando Agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Tocando agora \", episode === null || episode === void 0 ? void 0 : episode.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), episode ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        width: 592,\n        height: 592,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.emptyPlayer,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selecione um podcast para ouvir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: !episode ? styles.empty : '',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString(progress)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.slider,\n          children: episode ? /*#__PURE__*/_jsxDEV(Slider, {\n            onChange: handleSeek,\n            max: episode.duration,\n            value: progress,\n            trackStyle: {\n              backgroundColor: '#04d361'\n            },\n            railStyle: {\n              backgroundColor: '#9f75ff'\n            },\n            handleStyle: {\n              borderColor: '#04d361',\n              borderWidth: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emptySlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString((_episode$duration = episode === null || episode === void 0 ? void 0 : episode.duration) !== null && _episode$duration !== void 0 ? _episode$duration : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), episode && /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: episode.url,\n        autoPlay: true,\n        ref: audioRef,\n        onPlay: function onPlay() {\n          setPlayingState(true);\n        },\n        onPause: function onPause() {\n          setPlayingState(false);\n        },\n        loop: isLooping,\n        onLoadedMetadata: setupProgressListener\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || episodeList.length == 1,\n          onClick: toggleShuffle,\n          className: isShuffling ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Embaralhar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || !hasPrevious,\n          onClick: playPrevious,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar Anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.playButton,\n          disabled: !episode,\n          onClick: togglePlay,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Pausar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || !hasNext,\n          onClick: playNext,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Tocar Pr\\xF3ximo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          onClick: toggleLoop,\n          className: isLooping ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repitir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Player, \"qBEknFfndo7bvVv1ChEmm8qLBIA=\", false, function () {\n  return [usePlayer];\n});\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Users/gabak/OneDrive/WorkPlace/WebProjects/podcastrnext/src/components/Player/index.tsx"],"names":["useEffect","useRef","useState","usePlayer","styles","Image","Slider","convertDurationToTimeString","Player","audioRef","progress","setProgress","episodeList","currentEpisodeIndex","isPlaying","togglePlay","setPlayingState","playNext","playPrevious","hasPrevious","hasNext","isLooping","toggleLoop","isShuffling","toggleShuffle","episode","setupProgressListener","current","currentTime","addEventListener","Math","floor","handleSeek","amount","play","pause","playerContainer","title","currentEpisode","thumbnail","members","emptyPlayer","empty","slider","duration","backgroundColor","borderColor","borderWidth","emptySlider","url","buttons","length","isActive","playButton"],"mappings":"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","sourcesContent":["import {  useEffect, useRef, useState } from \"react\";\r\nimport {  usePlayer } from \"../../contexts/PlayerContext\";\r\nimport styles from \"./styles.module.scss\";\r\nimport  Image  from \"next/image\";\r\n\r\n\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css'\r\nimport { convertDurationToTimeString } from \"../../utils/convertDurationToTimeString\";\r\n\r\n\r\nexport function Player(){\r\n\r\n  const audioRef = useRef<HTMLAudioElement>(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const {\r\n    episodeList,\r\n    currentEpisodeIndex, \r\n    isPlaying, \r\n    togglePlay,\r\n    setPlayingState,\r\n    playNext,\r\n    playPrevious,\r\n    hasPrevious,\r\n    hasNext,\r\n    isLooping,\r\n    toggleLoop,\r\n    isShuffling,\r\n    toggleShuffle,\r\n  } = usePlayer();\r\n\r\n  const episode = episodeList[currentEpisodeIndex];\r\n\r\n  function setupProgressListener(){\r\n    audioRef.current.currentTime = 0;\r\n    audioRef.current.addEventListener('timeupdate' , () => {\r\n      setProgress(Math.floor(audioRef.current.currentTime));\r\n    })\r\n\r\n  }\r\n\r\n  function handleSeek(amount: number){\r\n    audioRef.current.currentTime = amount;\r\n    setProgress(amount);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!audioRef.current){\r\n      return;\r\n    }\r\n    if(isPlaying){\r\n      audioRef.current.play();\r\n    }else{\r\n      audioRef.current.pause();\r\n    }\r\n  }, [isPlaying]);\r\n\r\n  return (\r\n    <div className={styles.playerContainer}>\r\n      <header>\r\n        <img src=\"/playing.svg\" alt=\"Tocando Agora\"/>\r\n        <strong>Tocando agora {episode?.title}</strong>\r\n      </header>\r\n\r\n      {episode ? (\r\n        <div className={styles.currentEpisode}>\r\n          <Image \r\n           width={592}\r\n           height={592} \r\n           src={episode.thumbnail} \r\n           objectFit='cover'/>\r\n           <strong>{episode.title}</strong>\r\n           <span>{episode.members}</span>\r\n        </div>\r\n      ) : (\r\n        <div className={styles.emptyPlayer}>\r\n        <strong>Selecione um podcast para ouvir</strong>\r\n        </div>\r\n      )}\r\n\r\n      <footer className={!episode? styles.empty : ''}>\r\n        <div className={styles.progress}>\r\n        <span>{convertDurationToTimeString(progress)}</span>\r\n          <div className={styles.slider}>\r\n          {episode ? (\r\n            <Slider \r\n                    onChange = {handleSeek}\r\n                    max = {episode.duration}\r\n                    value ={progress}\r\n                    trackStyle={{backgroundColor: '#04d361'}} \r\n                    railStyle ={{backgroundColor: '#9f75ff'}}\r\n                    handleStyle = {{borderColor: '#04d361' , borderWidth:4}}\r\n            />\r\n          ) : (\r\n            <div className={styles.emptySlider}></div>\r\n          )}\r\n          </div>\r\n          <span>{convertDurationToTimeString(episode?.duration ?? 0)}</span>\r\n        </div>\r\n\r\n        {episode && (\r\n          <audio src={episode.url} \r\n          autoPlay\r\n          ref={audioRef}\r\n          onPlay = {()=> {setPlayingState(true)}}\r\n          onPause = {()=> {setPlayingState(false)}}\r\n          loop = {isLooping}\r\n          onLoadedMetadata ={setupProgressListener}\r\n          />\r\n        )}\r\n\r\n        <div className={styles.buttons}>\r\n          <button \r\n          type=\"button\" \r\n          disabled={!episode || episodeList.length ==1}\r\n          onClick = {toggleShuffle}\r\n          className = {isShuffling ? styles.isActive : ''}\r\n          >\r\n            <img src=\"/shuffle.svg\" alt=\"Embaralhar\"/>\r\n          </button>\r\n          <button type=\"button\" disabled={!episode || !hasPrevious} onClick={playPrevious}>\r\n            <img src=\"/play-previous.svg\" alt=\"Tocar Anterior\"/>\r\n          </button>\r\n          <button type=\"button\" \r\n            className={styles.playButton} \r\n            disabled={!episode}\r\n            onClick = { togglePlay}\r\n          >\r\n            {isPlaying ? (\r\n              <img src=\"/pause.svg\" alt=\"Tocar\"/>\r\n            ): (\r\n              <img src=\"/play.svg\" alt=\"Pausar\"/>\r\n            )}\r\n          </button>\r\n          <button type=\"button\" disabled={!episode || !hasNext} onClick={playNext} >\r\n            <img src=\"/play-next.svg\" alt=\"Tocar Próximo\"/>\r\n          </button>\r\n          <button \r\n          type=\"button\" \r\n          disabled={!episode} \r\n          onClick={toggleLoop}\r\n          className= { isLooping ? styles.isActive : '' }\r\n          >\r\n            <img src=\"/repeat.svg\" alt=\"Repitir\"/>\r\n          </button>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}