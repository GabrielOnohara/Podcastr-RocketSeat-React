{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gabak\\\\OneDrive\\\\WorkPlace\\\\WebProjects\\\\podcastrnext\\\\src\\\\pages\\\\episodes\\\\[slug].tsx\";\nimport { format, parseISO } from 'date-fns';\nimport { api } from '../../services/api';\nimport ptBr from 'date-fns/locale/pt-BR';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport default function Episode({\n  episode\n}) {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: episode.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 4\n  }, this);\n}\nexport const getStaticPaths = async () => {\n  //quando usamos ssg com criacao dinamica de pags precisamos usar este metodo\n  return {\n    paths: [],\n    fallback: 'blocking'\n  };\n};\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n      locale: ptBr\n    }),\n    duration: Number(data.file.duration),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {\n      episode\n    },\n    revalidate: 60 * 60 * 24\n  };\n};","map":{"version":3,"sources":["C:/Users/gabak/OneDrive/WorkPlace/WebProjects/podcastrnext/src/pages/episodes/[slug].tsx"],"names":["format","parseISO","api","ptBr","convertDurationToTimeString","Episode","episode","title","getStaticPaths","paths","fallback","getStaticProps","ctx","slug","params","data","get","id","thumbnail","members","publishedAt","published_at","locale","duration","Number","file","durationAsString","description","url","props","revalidate"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AAGA,SAASC,GAAT,QAAoB,oBAApB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,2BAAT,QAA4C,yCAA5C;AAgBA,eAAe,SAASC,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAA0C;AAEvD,sBACC;AAAA,cAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,UADD;AAGD;AAED,OAAO,MAAMC,cAA+B,GAAG,YAAW;AAAC;AACzD,SAAO;AACLC,IAAAA,KAAK,EAAG,EADH;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,cAA8B,GAAG,MAAOC,GAAP,IAAe;AAC3D,QAAM;AAACC,IAAAA;AAAD,MAASD,GAAG,CAACE,MAAnB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAU,MAAMb,GAAG,CAACc,GAAJ,CAAS,aAAYH,IAAK,EAA1B,CAAtB;AAEA,QAAMP,OAAO,GAAG;AACdW,IAAAA,EAAE,EAAEF,IAAI,CAACE,EADK;AAEZV,IAAAA,KAAK,EAAEQ,IAAI,CAACR,KAFA;AAGZW,IAAAA,SAAS,EAAEH,IAAI,CAACG,SAHJ;AAIZC,IAAAA,OAAO,EAAEJ,IAAI,CAACI,OAJF;AAKZC,IAAAA,WAAW,EAAEpB,MAAM,CAACC,QAAQ,CAACc,IAAI,CAACM,YAAN,CAAT,EAA8B,UAA9B,EAA0C;AAACC,MAAAA,MAAM,EAAEnB;AAAT,KAA1C,CALP;AAMZoB,IAAAA,QAAQ,EAAEC,MAAM,CAACT,IAAI,CAACU,IAAL,CAAUF,QAAX,CANJ;AAOZG,IAAAA,gBAAgB,EAAEtB,2BAA2B,CAACoB,MAAM,CAACT,IAAI,CAACU,IAAL,CAAUF,QAAX,CAAP,CAPjC;AAQZI,IAAAA,WAAW,EAAGZ,IAAI,CAACY,WARP;AASZC,IAAAA,GAAG,EAAEb,IAAI,CAACU,IAAL,CAAUG;AATH,GAAhB;AAYF,SAAM;AACJC,IAAAA,KAAK,EAAE;AACLvB,MAAAA;AADK,KADH;AAIJwB,IAAAA,UAAU,EAAE,KAAI,EAAJ,GAAS;AAJjB,GAAN;AAMC,CAtBM","sourcesContent":["import { format, parseISO } from 'date-fns';\r\nimport { GetStaticPaths, GetStaticProps } from 'next';\r\nimport { useRouter } from 'next/router'\r\nimport { api } from '../../services/api';\r\nimport ptBr from 'date-fns/locale/pt-BR';\r\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\r\n\r\ntype Episode = {\r\n  id: string,\r\n  title: string,\r\n  thumbnail: string,\r\n  members: string,\r\n  publishedAt: string,\r\n  duration: number,\r\n  durationAsString: string,\r\n  url: string,\r\n  description: string,\r\n}\r\ntype EpisodeProps = {\r\n  episode:Episode;\r\n}\r\nexport default function Episode({episode} :EpisodeProps) {\r\n\r\n  return (\r\n   <h1>{episode.title}</h1>\r\n  )\r\n}\r\n\r\nexport const getStaticPaths : GetStaticPaths = async() => {//quando usamos ssg com criacao dinamica de pags precisamos usar este metodo\r\n  return {\r\n    paths:  [],\r\n    fallback: 'blocking'\r\n  }\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps = async (ctx) => {\r\n  const {slug} = ctx.params;\r\n  const {data}  = await api.get(`/episodes/${slug}`);\r\n\r\n  const episode = {\r\n    id: data.id,\r\n      title: data.title,\r\n      thumbnail: data.thumbnail,\r\n      members: data.members,\r\n      publishedAt: format(parseISO(data.published_at), 'd MMM yy', {locale: ptBr} ),\r\n      duration: Number(data.file.duration),\r\n      durationAsString: convertDurationToTimeString(Number(data.file.duration)),\r\n      description : data.description,\r\n      url: data.file.url,\r\n  }\r\n\r\nreturn{\r\n  props: {\r\n    episode\r\n  },\r\n  revalidate: 60 *60  *24 \r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}