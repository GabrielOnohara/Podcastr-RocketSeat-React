{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gabak\\\\OneDrive\\\\WorkPlace\\\\WebProjects\\\\podcastrnext\\\\src\\\\pages\\\\index.tsx\";\n//spa\n//ssr \n//ssg usaremos este modo pois nossa pagina nao se altera muitas vezes num dia(1 video por dia)\nimport ptBr from 'date-fns/locale/pt-BR';\nimport { api } from \"../services/api\";\nimport { format, parseISO } from 'date-fns';\nexport default function Home(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  const {\n    data\n  } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbNail: episode.thumbNail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM YY', {\n        locale: ptBr\n      }),\n      duration: Number(episode.file.duration),\n      description: episode.description,\n      url: episode.file.url\n    };\n  });\n  return {\n    props: {\n      episodes: data\n    },\n    revalidate: 60 * 60 * 8 //8 horas(a cada 8 horas a pagina vai ser renderizada novamente, \n    //ou seja, na renderiza toda vez que uma nova pessoa entrar na pag)\n\n  };\n};","map":{"version":3,"sources":["C:/Users/gabak/OneDrive/WorkPlace/WebProjects/podcastrnext/src/pages/index.tsx"],"names":["ptBr","api","format","parseISO","Home","props","getStaticProps","data","get","params","_limit","_sort","_order","episodes","map","episode","id","title","thumbNail","members","publishedAt","published_at","locale","duration","Number","file","description","url","revalidate"],"mappings":";;AAAA;AACA;AACA;AAEA,OAAOA,IAAP,MAAiB,uBAAjB;AAGA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,UAA/B;AAWA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAgC;AAC7C,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;AAED,OAAQ,MAAMC,cAA8B,GAAG,YAAY;AACzD,QAAM;AAACC,IAAAA;AAAD,MAAU,MAAMN,GAAG,CAACO,GAAJ,CAAQ,UAAR,EAAmB;AACvCC,IAAAA,MAAM,EAAC;AACLC,MAAAA,MAAM,EAAE,EADH;AAELC,MAAAA,KAAK,EAAE,cAFF;AAGLC,MAAAA,MAAM,EAAE;AAHH;AADgC,GAAnB,CAAtB;AAQA,QAAMC,QAAQ,GAAGN,IAAI,CAACO,GAAL,CAASC,OAAO,IAAG;AAClC,WAAM;AACJC,MAAAA,EAAE,EAAED,OAAO,CAACC,EADR;AAEJC,MAAAA,KAAK,EAAEF,OAAO,CAACE,KAFX;AAGJC,MAAAA,SAAS,EAAEH,OAAO,CAACG,SAHf;AAIJC,MAAAA,OAAO,EAAEJ,OAAO,CAACI,OAJb;AAKJC,MAAAA,WAAW,EAAElB,MAAM,CAACC,QAAQ,CAACY,OAAO,CAACM,YAAT,CAAT,EAAiC,UAAjC,EAA6C;AAACC,QAAAA,MAAM,EAAEtB;AAAT,OAA7C,CALf;AAMJuB,MAAAA,QAAQ,EAAEC,MAAM,CAACT,OAAO,CAACU,IAAR,CAAaF,QAAd,CANZ;AAOJG,MAAAA,WAAW,EAAGX,OAAO,CAACW,WAPlB;AAQJC,MAAAA,GAAG,EAAEZ,OAAO,CAACU,IAAR,CAAaE;AARd,KAAN;AAWD,GAZgB,CAAjB;AAcA,SAAM;AACJtB,IAAAA,KAAK,EAAE;AACLQ,MAAAA,QAAQ,EAAEN;AADL,KADH;AAIJqB,IAAAA,UAAU,EAAE,KAAI,EAAJ,GAAS,CAJjB,CAImB;AACvB;;AALI,GAAN;AAOD,CA9BO","sourcesContent":["//spa\n//ssr \n//ssg usaremos este modo pois nossa pagina nao se altera muitas vezes num dia(1 video por dia)\n\nimport ptBr from 'date-fns/locale/pt-BR';\nimport { useEffect } from \"react\"\nimport {GetStaticProps} from \"next\"\nimport { api } from \"../services/api\"\nimport {format, parseISO} from 'date-fns';\ntype Episode = {\n    id: string;\n    title: string;\n    members: string;\n}\ntype HomeProps = {\n  episodes: Episode[];\n}\n\n\nexport default function Home(props: HomeProps) {\n  return (\n    <div>\n      \n    </div>\n  )\n}\n\nexport  const getStaticProps: GetStaticProps = async () => {\n  const {data}  = await api.get('episodes',{\n    params:{\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc',\n    }\n  });\n\n  const episodes = data.map(episode =>{\n    return{\n      id: episode.id,\n      title: episode.title,\n      thumbNail: episode.thumbNail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM YY', {locale: ptBr} ),\n      duration: Number(episode.file.duration),\n      description : episode.description,\n      url: episode.file.url,\n    }\n    \n  });\n\n  return{\n    props: {\n      episodes: data,\n    },\n    revalidate: 60 *60  *8 //8 horas(a cada 8 horas a pagina vai ser renderizada novamente, \n    //ou seja, na renderiza toda vez que uma nova pessoa entrar na pag)\n  }\n}"]},"metadata":{},"sourceType":"module"}