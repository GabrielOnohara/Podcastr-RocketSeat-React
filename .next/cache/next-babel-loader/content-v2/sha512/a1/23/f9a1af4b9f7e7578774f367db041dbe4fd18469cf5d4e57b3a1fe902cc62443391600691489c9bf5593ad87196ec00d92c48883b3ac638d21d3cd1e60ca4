{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gabak\\\\OneDrive\\\\WorkPlace\\\\WebProjects\\\\podcastrnext\\\\src\\\\pages\\\\index.tsx\";\n//spa\n//ssr \n//ssg usaremos este modo pois nossa pagina nao se altera muitas vezes num dia(1 video por dia)\nimport ptBr from 'date-fns/locale/pt-BR';\nimport { api } from \"../services/api\";\nimport { format, parseISO } from 'date-fns';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\nimport styles from './home.module.scss';\nexport default function Home({\n  latestEpisodes,\n  allEpisodes\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.homepage,\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.latestEpisodes,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\xDAltimos Lan\\xE7amentos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: latestEpisodes.map(episode => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"\",\n              children: episode.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.allEpisodes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  const {\n    data\n  } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', {\n        locale: ptBr\n      }),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url\n    };\n  });\n  const latestEpisodes = episodes.slice(0, 2);\n  const allEpisodes = episodes.slice(2, episodes.length);\n  return {\n    props: {\n      latestEpisodes,\n      allEpisodes\n    },\n    revalidate: 60 * 60 * 8 //8 horas(a cada 8 horas a pagina vai ser renderizada novamente, \n    //ou seja, na renderiza toda vez que uma nova pessoa entrar na pag)\n\n  };\n};","map":{"version":3,"sources":["C:/Users/gabak/OneDrive/WorkPlace/WebProjects/podcastrnext/src/pages/index.tsx"],"names":["ptBr","api","format","parseISO","convertDurationToTimeString","styles","Home","latestEpisodes","allEpisodes","homepage","map","episode","title","getStaticProps","data","get","params","_limit","_sort","_order","episodes","id","thumbnail","members","publishedAt","published_at","locale","duration","Number","file","durationAsString","description","url","slice","length","props","revalidate"],"mappings":";;AAAA;AACA;AACA;AAEA,OAAOA,IAAP,MAAiB,uBAAjB;AAGA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,UAA/B;AACA,SAASC,2BAAT,QAA4C,sCAA5C;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAmBA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA,cAAD;AAAiBC,EAAAA;AAAjB,CAAd,EAAwD;AACrE,sBACE;AAAK,IAAA,SAAS,EAAIH,MAAM,CAACI,QAAzB;AAAA,4BACE;AAAS,MAAA,SAAS,EAAIJ,MAAM,CAACE,cAA7B;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBACGA,cAAc,CAACG,GAAf,CAAoBC,OAAD,IAAa;AAC/B,8BACE;AAAA,mCACE;AAAG,cAAA,IAAI,EAAC,EAAR;AAAA,wBAAYA,OAAO,CAACC;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SANA;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYY;AAAS,MAAA,SAAS,EAAIP,MAAM,CAACG;AAA7B;AAAA;AAAA;AAAA;AAAA,YAZZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;AAED,OAAO,MAAMK,cAA8B,GAAG,YAAY;AACxD,QAAM;AAACC,IAAAA;AAAD,MAAU,MAAMb,GAAG,CAACc,GAAJ,CAAQ,UAAR,EAAmB;AACvCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE,cAFD;AAGNC,MAAAA,MAAM,EAAE;AAHF;AAD+B,GAAnB,CAAtB;AAQA,QAAMC,QAAQ,GAAGN,IAAI,CAACJ,GAAL,CAASC,OAAO,IAAI;AACnC,WAAO;AACLU,MAAAA,EAAE,EAAEV,OAAO,CAACU,EADP;AAELT,MAAAA,KAAK,EAAED,OAAO,CAACC,KAFV;AAGLU,MAAAA,SAAS,EAAEX,OAAO,CAACW,SAHd;AAILC,MAAAA,OAAO,EAAEZ,OAAO,CAACY,OAJZ;AAKLC,MAAAA,WAAW,EAAEtB,MAAM,CAACC,QAAQ,CAACQ,OAAO,CAACc,YAAT,CAAT,EAAiC,UAAjC,EAA6C;AAACC,QAAAA,MAAM,EAAE1B;AAAT,OAA7C,CALd;AAML2B,MAAAA,QAAQ,EAAEC,MAAM,CAACjB,OAAO,CAACkB,IAAR,CAAaF,QAAd,CANX;AAOLG,MAAAA,gBAAgB,EAAE1B,2BAA2B,CAACwB,MAAM,CAACjB,OAAO,CAACkB,IAAR,CAAaF,QAAd,CAAP,CAPxC;AAQLI,MAAAA,WAAW,EAAGpB,OAAO,CAACoB,WARjB;AASLC,MAAAA,GAAG,EAAErB,OAAO,CAACkB,IAAR,CAAaG;AATb,KAAP;AAYD,GAbgB,CAAjB;AAeA,QAAMzB,cAAc,GAAGa,QAAQ,CAACa,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAvB;AACA,QAAMzB,WAAW,GAAGY,QAAQ,CAACa,KAAT,CAAe,CAAf,EAAiBb,QAAQ,CAACc,MAA1B,CAApB;AACA,SAAM;AACJC,IAAAA,KAAK,EAAE;AACL5B,MAAAA,cADK;AAELC,MAAAA;AAFK,KADH;AAKJ4B,IAAAA,UAAU,EAAE,KAAI,EAAJ,GAAS,CALjB,CAKmB;AACvB;;AANI,GAAN;AAQD,CAlCM","sourcesContent":["//spa\n//ssr \n//ssg usaremos este modo pois nossa pagina nao se altera muitas vezes num dia(1 video por dia)\n\nimport ptBr from 'date-fns/locale/pt-BR';\nimport { useEffect } from \"react\"\nimport {GetStaticProps} from \"next\"\nimport { api } from \"../services/api\"\nimport {format, parseISO} from 'date-fns';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\nimport styles from './home.module.scss';\n\ntype Episode = {\n  id: string,\n  title: string,\n  thumbnail: string,\n  members: string,\n  publishedAt: string,\n  duration: number,\n  durationAsString: string,\n  description : string,\n  url: string,\n}\ntype HomeProps = {\n  latestEpisodes: Episode[];\n  allEpisodes: Episode[];\n}\n\n\nexport default function Home({latestEpisodes, allEpisodes}: HomeProps) {\n  return (\n    <div className = {styles.homepage}>\n      <section className = {styles.latestEpisodes}>\n        <h2>Últimos Lançamentos</h2>\n        <ul>\n          {latestEpisodes.map((episode) => {\n            return(\n              <li>\n                <a href=\"\">{episode.title}</a>\n              </li>\n            )\n          })}\n        </ul>\n      </section><section className = {styles.allEpisodes}>\n        \n      </section>\n    </div>\n  )\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const {data}  = await api.get('episodes',{\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', {locale: ptBr} ),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description : episode.description,\n      url: episode.file.url,\n    }\n    \n  });\n\n  const latestEpisodes = episodes.slice(0, 2);\n  const allEpisodes = episodes.slice(2,episodes.length);\n  return{\n    props: {\n      latestEpisodes,\n      allEpisodes\n    },\n    revalidate: 60 *60  *8 //8 horas(a cada 8 horas a pagina vai ser renderizada novamente, \n    //ou seja, na renderiza toda vez que uma nova pessoa entrar na pag)\n  }\n}"]},"metadata":{},"sourceType":"module"}