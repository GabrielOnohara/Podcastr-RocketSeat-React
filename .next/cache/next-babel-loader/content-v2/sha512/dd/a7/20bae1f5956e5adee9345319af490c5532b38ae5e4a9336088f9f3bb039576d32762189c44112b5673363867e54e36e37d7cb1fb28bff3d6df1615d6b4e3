{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gabak\\\\OneDrive\\\\WorkPlace\\\\WebProjects\\\\podcastrnext\\\\src\\\\contexts\\\\PlayerContext.tsx\";\nimport { createContext, useState } from \"react\";\nexport const PlayerContext = /*#__PURE__*/createContext({});\nexport function PlayerContextProvider({\n  children: PlayerContextProviderProps\n}) {\n  const {\n    0: episodeList,\n    1: setEpisodeList\n  } = useState([]);\n  const {\n    0: currentEpisodeIndex,\n    1: setCurrentEpisodeIndex\n  } = useState(0);\n  const {\n    0: isPlaying,\n    1: setIsPlaying\n  } = useState(false);\n\n  function play(episode) {\n    setEpisodeList([episode]);\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true);\n  }\n\n  function togglePlay() {\n    setIsPlaying(!isPlaying);\n  }\n\n  function setPlayingState(state) {\n    setIsPlaying(state);\n  }\n\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      episodeList,\n      currentEpisodeIndex,\n      play,\n      isPlaying,\n      togglePlay,\n      setPlayingState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/gabak/OneDrive/WorkPlace/WebProjects/podcastrnext/src/contexts/PlayerContext.tsx"],"names":["createContext","useState","PlayerContext","PlayerContextProvider","children","PlayerContextProviderProps","episodeList","setEpisodeList","currentEpisodeIndex","setCurrentEpisodeIndex","isPlaying","setIsPlaying","play","episode","togglePlay","setPlayingState","state"],"mappings":";;AAAA,SAAUA,aAAV,EAAyBC,QAAzB,QAAoD,OAApD;AAoBA,OAAO,MAAMC,aAAa,gBAAGF,aAAa,CAAC,EAAD,CAAnC;AAMP,OAAO,SAASG,qBAAT,CAA+B;AAACC,EAAAA,QAAQ,EAAEC;AAAX,CAA/B,EAAsE;AAC3E,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAA,OAACO,mBAAD;AAAA,OAAsBC;AAAtB,MAAgDR,QAAQ,CAAC,CAAD,CAA9D;AACA,QAAM;AAAA,OAACS,SAAD;AAAA,OAAYC;AAAZ,MAA4BV,QAAQ,CAAC,KAAD,CAA1C;;AAEA,WAASW,IAAT,CAAcC,OAAd,EAA+B;AAC7BN,IAAAA,cAAc,CAAC,CAACM,OAAD,CAAD,CAAd;AACAJ,IAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED,WAASG,UAAT,GAAqB;AACnBH,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;;AAED,WAASK,eAAT,CAAyBC,KAAzB,EAAuC;AACrCL,IAAAA,YAAY,CAACK,KAAD,CAAZ;AACD;;AAED,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAACV,MAAAA,WAAD;AAAcE,MAAAA,mBAAd;AAAmCI,MAAAA,IAAnC;AAAyCF,MAAAA,SAAzC;AAAoDI,MAAAA,UAApD;AAA+DC,MAAAA;AAA/D,KAA/B;AAAA,cACGX;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD","sourcesContent":["import  { createContext, useState, ReactNode} from  \"react\"  \r\n\r\ntype Episode = {\r\n  title: string;\r\n  members: string;\r\n  thumbnail: string;\r\n  duration: number;\r\n  url: string;\r\n}\r\n\r\ntype PlayerContextData = {\r\n  episodeList: Episode[]\r\n  currentEpisodeIndex: number;\r\n  play: (episode: Episode) =>void;\r\n  isPlaying: boolean;\r\n  togglePlay: () => void;\r\n  setPlayingState: (state:boolean) =>void;\r\n}\r\n\r\n\r\nexport const PlayerContext = createContext({} as PlayerContextData);\r\n\r\ntype PlayerContextProviderProps = {\r\n  children: ReactNode;\r\n}\r\n\r\nexport function PlayerContextProvider({children: PlayerContextProviderProps}){\r\n  const [episodeList, setEpisodeList] = useState([]);\r\n  const [currentEpisodeIndex, setCurrentEpisodeIndex] = useState(0);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  function play(episode :Episode){\r\n    setEpisodeList([episode]);\r\n    setCurrentEpisodeIndex(0);\r\n    setIsPlaying(true);\r\n  }\r\n\r\n  function togglePlay(){\r\n    setIsPlaying(!isPlaying);\r\n  }\r\n\r\n  function setPlayingState(state:boolean){\r\n    setIsPlaying(state);\r\n  }\r\n\r\n  return (\r\n    <PlayerContext.Provider value={{episodeList, currentEpisodeIndex ,play, isPlaying, togglePlay,setPlayingState}}>\r\n      {children}\r\n      </PlayerContext.Provider>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}