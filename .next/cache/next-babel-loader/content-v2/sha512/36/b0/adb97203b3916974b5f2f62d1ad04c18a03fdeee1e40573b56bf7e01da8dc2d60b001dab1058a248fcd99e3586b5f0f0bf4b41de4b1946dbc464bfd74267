{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gabak\\\\OneDrive\\\\WorkPlace\\\\WebProjects\\\\podcastrnext\\\\src\\\\pages\\\\index.tsx\";\n//spa\n//ssr \n//ssg usaremos este modo pois nossa pagina nao se altera muitas vezes num dia(1 video por dia)\nimport styles from 'home.module.scss';\nexport var __N_SSG = true;\nexport default function Home(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.homepage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/gabak/OneDrive/WorkPlace/WebProjects/podcastrnext/src/pages/index.tsx"],"names":["styles","Home","props","homepage"],"mappings":";;AAAA;AACA;AACA;AAQA,OAAOA,MAAP,MAAmB,kBAAnB;;AAkBA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAgC;AAC7C,sBACE;AAAK,IAAA,SAAS,EAAIF,MAAM,CAACG;AAAzB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;KANuBF,I","sourcesContent":["//spa\n//ssr \n//ssg usaremos este modo pois nossa pagina nao se altera muitas vezes num dia(1 video por dia)\n\nimport ptBr from 'date-fns/locale/pt-BR';\nimport { useEffect } from \"react\"\nimport {GetStaticProps} from \"next\"\nimport { api } from \"../services/api\"\nimport {format, parseISO} from 'date-fns';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\nimport styles from 'home.module.scss';\n\ntype Episode = {\n  id: string,\n  title: string,\n  thumbnail: string,\n  members: string,\n  publishedAt: string,\n  duration: number,\n  durationAsString: string,\n  description : string,\n  url: string,\n}\ntype HomeProps = {\n  episodes: Episode[];\n}\n\n\nexport default function Home(props: HomeProps) {\n  return (\n    <div className = {styles.homepage}>\n      \n    </div>\n  )\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const {data}  = await api.get('episodes',{\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _order: 'desc'\n    }\n  });\n\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', {locale: ptBr} ),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description : episode.description,\n      url: episode.file.url,\n    }\n    \n  });\n\n  return{\n    props: {\n      episodes,\n    },\n    revalidate: 60 *60  *8 //8 horas(a cada 8 horas a pagina vai ser renderizada novamente, \n    //ou seja, na renderiza toda vez que uma nova pessoa entrar na pag)\n  }\n}"]},"metadata":{},"sourceType":"module"}