{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\gabak\\\\OneDrive\\\\WorkPlace\\\\WebProjects\\\\podcastrnext\\\\src\\\\contexts\\\\PlayerContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nexport var PlayerContext = /*#__PURE__*/createContext({});\nexport function PlayerContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      episodeList = _useState[0],\n      setEpisodeList = _useState[1];\n\n  var _useState2 = useState(0),\n      currentEpisodeIndex = _useState2[0],\n      setCurrentEpisodeIndex = _useState2[1];\n\n  var _useState3 = useState(false),\n      isPlaying = _useState3[0],\n      setIsPlaying = _useState3[1];\n\n  function play(episode) {\n    setEpisodeList([episode]);\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true);\n  }\n\n  function playList(list, index) {\n    setEpisodeList(list);\n    setCurrentEpisodeIndex(index);\n    setIsPlaying(true);\n  }\n\n  function togglePlay() {\n    setIsPlaying(!isPlaying);\n  }\n\n  function setPlayingState(state) {\n    setIsPlaying(state);\n  }\n\n  function playNext() {\n    var nextEpisodeIndex = currentEpisodeIndex + 1;\n\n    if (nextEpisodeIndex < episodeList.length) {\n      setCurrentEpisodeIndex(nextEpisodeIndex);\n    } else {\n      return;\n    }\n  }\n\n  function playPrevious() {\n    var nextEpisodeIndex = currentEpisodeIndex - 1;\n\n    if (nextEpisodeIndex > 0) {\n      setCurrentEpisodeIndex(nextEpisodeIndex);\n    } else {\n      return;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      episodeList: episodeList,\n      currentEpisodeIndex: currentEpisodeIndex,\n      play: play,\n      playList: playList,\n      playNext: playNext,\n      playPrevious: playPrevious,\n      isPlaying: isPlaying,\n      togglePlay: togglePlay,\n      setPlayingState: setPlayingState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlayerContextProvider, \"LrQXJ4YCuKXOoMsmvRtpeyylJ9U=\");\n\n_c = PlayerContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerContextProvider\");","map":{"version":3,"sources":["C:/Users/gabak/OneDrive/WorkPlace/WebProjects/podcastrnext/src/contexts/PlayerContext.tsx"],"names":["createContext","useState","PlayerContext","PlayerContextProvider","children","episodeList","setEpisodeList","currentEpisodeIndex","setCurrentEpisodeIndex","isPlaying","setIsPlaying","play","episode","playList","list","index","togglePlay","setPlayingState","state","playNext","nextEpisodeIndex","length","playPrevious"],"mappings":";;;;;AAAA,SAAUA,aAAV,EAAyBC,QAAzB,QAAoD,OAApD;AAuBA,OAAO,IAAMC,aAAa,gBAAGF,aAAa,CAAC,EAAD,CAAnC;AAMP,OAAO,SAASG,qBAAT,OAAsE;AAAA;;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;;AAAA,kBACrCH,QAAQ,CAAC,EAAD,CAD6B;AAAA,MACpEI,WADoE;AAAA,MACvDC,cADuD;;AAAA,mBAErBL,QAAQ,CAAC,CAAD,CAFa;AAAA,MAEpEM,mBAFoE;AAAA,MAE/CC,sBAF+C;;AAAA,mBAGzCP,QAAQ,CAAC,KAAD,CAHiC;AAAA,MAGpEQ,SAHoE;AAAA,MAGzDC,YAHyD;;AAK3E,WAASC,IAAT,CAAcC,OAAd,EAA+B;AAC7BN,IAAAA,cAAc,CAAC,CAACM,OAAD,CAAD,CAAd;AACAJ,IAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED,WAASG,QAAT,CAAkBC,IAAlB,EAAkCC,KAAlC,EAA+C;AAC7CT,IAAAA,cAAc,CAACQ,IAAD,CAAd;AACAN,IAAAA,sBAAsB,CAACO,KAAD,CAAtB;AACAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED,WAASM,UAAT,GAAqB;AACnBN,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;;AAED,WAASQ,eAAT,CAAyBC,KAAzB,EAAuC;AACrCR,IAAAA,YAAY,CAACQ,KAAD,CAAZ;AACD;;AAED,WAASC,QAAT,GAAmB;AACjB,QAAMC,gBAAgB,GAAGb,mBAAmB,GAAG,CAA/C;;AACA,QAAGa,gBAAgB,GAAGf,WAAW,CAACgB,MAAlC,EAAyC;AACvCb,MAAAA,sBAAsB,CAACY,gBAAD,CAAtB;AACD,KAFD,MAEK;AACH;AACD;AACF;;AAED,WAASE,YAAT,GAAuB;AACrB,QAAMF,gBAAgB,GAAGb,mBAAmB,GAAG,CAA/C;;AACA,QAAGa,gBAAgB,GAAG,CAAtB,EAAwB;AACtBZ,MAAAA,sBAAsB,CAACY,gBAAD,CAAtB;AACD,KAFD,MAEK;AACH;AACD;AACF;;AAED,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC3Bf,MAAAA,WAAW,EAAXA,WAD2B;AAE3BE,MAAAA,mBAAmB,EAAnBA,mBAF2B;AAG3BI,MAAAA,IAAI,EAAJA,IAH2B;AAI3BE,MAAAA,QAAQ,EAARA,QAJ2B;AAK3BM,MAAAA,QAAQ,EAARA,QAL2B;AAM3BG,MAAAA,YAAY,EAAZA,YAN2B;AAO3Bb,MAAAA,SAAS,EAATA,SAP2B;AAQ3BO,MAAAA,UAAU,EAAVA,UAR2B;AAS3BC,MAAAA,eAAe,EAAfA;AAT2B,KAA/B;AAAA,cAUGb;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAzDeD,qB;;KAAAA,qB","sourcesContent":["import  { createContext, useState, ReactNode} from  \"react\"  \r\n\r\ntype Episode = {\r\n  title: string;\r\n  members: string;\r\n  thumbnail: string;\r\n  duration: number;\r\n  url: string;\r\n}\r\n\r\ntype PlayerContextData = {\r\n  episodeList: Episode[]\r\n  currentEpisodeIndex: number;\r\n  play: (episode: Episode) =>void;\r\n  isPlaying: boolean;\r\n  togglePlay: () => void;\r\n  setPlayingState: (state:boolean) =>void;\r\n  playList: (list: Episode[], index: number) => void;\r\n  playNext: () => void;\r\n  playPrevious: () => void;\r\n}\r\n\r\n\r\nexport const PlayerContext = createContext({} as PlayerContextData);\r\n\r\ntype PlayerContextProviderProps = {\r\n  children: ReactNode;\r\n}\r\n\r\nexport function PlayerContextProvider({children}: PlayerContextProviderProps){\r\n  const [episodeList, setEpisodeList] = useState([]);\r\n  const [currentEpisodeIndex, setCurrentEpisodeIndex] = useState(0);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  function play(episode :Episode){\r\n    setEpisodeList([episode]);\r\n    setCurrentEpisodeIndex(0);\r\n    setIsPlaying(true);\r\n  }\r\n\r\n  function playList(list:Episode[], index:number){\r\n    setEpisodeList(list);\r\n    setCurrentEpisodeIndex(index)\r\n    setIsPlaying(true);\r\n  }\r\n\r\n  function togglePlay(){\r\n    setIsPlaying(!isPlaying);\r\n  }\r\n\r\n  function setPlayingState(state:boolean){\r\n    setIsPlaying(state);\r\n  }\r\n\r\n  function playNext(){\r\n    const nextEpisodeIndex = currentEpisodeIndex + 1;\r\n    if(nextEpisodeIndex < episodeList.length){\r\n      setCurrentEpisodeIndex(nextEpisodeIndex);\r\n    }else{\r\n      return;\r\n    }\r\n  }\r\n\r\n  function playPrevious(){\r\n    const nextEpisodeIndex = currentEpisodeIndex - 1;\r\n    if(nextEpisodeIndex > 0){\r\n      setCurrentEpisodeIndex(nextEpisodeIndex);\r\n    }else{\r\n      return;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PlayerContext.Provider value={{\r\n        episodeList, \r\n        currentEpisodeIndex,\r\n        play, \r\n        playList,\r\n        playNext,\r\n        playPrevious,\r\n        isPlaying,\r\n        togglePlay, \r\n        setPlayingState}}>\r\n      {children}\r\n    </PlayerContext.Provider>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}