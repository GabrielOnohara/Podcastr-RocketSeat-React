{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\gabak\\\\OneDrive\\\\WorkPlace\\\\WebProjects\\\\podcastrnext\\\\src\\\\pages\\\\episodes\\\\[slug].tsx\";\nimport styles from './episode.module.scss';\nimport Image from \"next/image\";\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  var episode = _ref.episode;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/arrow-left.svg\",\n          alt: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 700,\n        height: 160,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 4\n  }, this);\n}\n_c = Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["C:/Users/gabak/OneDrive/WorkPlace/WebProjects/podcastrnext/src/pages/episodes/[slug].tsx"],"names":["styles","Image","Episode","episode","thumbnailContainer","thumbnail"],"mappings":";;AAMA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAQC,KAAR,MAAoB,YAApB;;AAgBA,eAAe,SAASC,OAAT,OAA0C;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AAEvD,sBACC;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACG,OAAvB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEH,MAAM,CAACI,kBAAvB;AAAA,8BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,+BACE;AAAK,UAAA,GAAG,EAAC,iBAAT;AAA2B,UAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AACC,QAAA,KAAK,EAAI,GADV;AAEC,QAAA,MAAM,EAAI,GAFX;AAGC,QAAA,GAAG,EAAID,OAAO,CAACE,SAHhB;AAIC,QAAA,SAAS,EAAG;AAJb;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAeD;KAjBuBH,O","sourcesContent":["import { format, parseISO } from 'date-fns';\r\nimport { GetStaticPaths, GetStaticProps } from 'next';\r\nimport { useRouter } from 'next/router'\r\nimport { api } from '../../services/api';\r\nimport ptBr from 'date-fns/locale/pt-BR';\r\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\r\nimport styles from './episode.module.scss'\r\nimport  Image  from \"next/image\";\r\n\r\ntype Episode = {\r\n  id: string,\r\n  title: string,\r\n  thumbnail: string,\r\n  members: string,\r\n  publishedAt: string,\r\n  duration: number,\r\n  durationAsString: string,\r\n  url: string,\r\n  description: string,\r\n}\r\ntype EpisodeProps = {\r\n  episode:Episode;\r\n}\r\nexport default function Episode({episode} :EpisodeProps) {\r\n\r\n  return (\r\n   <div className={styles.episode}>\r\n     <div className={styles.thumbnailContainer}>\r\n       <button type=\"button\">\r\n         <img src=\"/arrow-left.svg\" alt=\"Voltar\"/>\r\n       </button>\r\n       <Image \r\n        width = {700}\r\n        height = {160}\r\n        src = {episode.thumbnail}\r\n        objectFit = 'cover'\r\n       />\r\n     </div>\r\n   </div>\r\n  )\r\n}\r\n\r\nexport const getStaticPaths : GetStaticPaths = async() => {//quando usamos ssg com criacao dinamica de pags precisamos usar este metodo\r\n  return {\r\n    paths:  [],\r\n    fallback: 'blocking'\r\n  }\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps = async (ctx) => {\r\n  const {slug} = ctx.params;\r\n  const {data}  = await api.get(`/episodes/${slug}`);\r\n\r\n  const episode = {\r\n    id: data.id,\r\n      title: data.title,\r\n      thumbnail: data.thumbnail,\r\n      members: data.members,\r\n      publishedAt: format(parseISO(data.published_at), 'd MMM yy', {locale: ptBr} ),\r\n      duration: Number(data.file.duration),\r\n      durationAsString: convertDurationToTimeString(Number(data.file.duration)),\r\n      description : data.description,\r\n      url: data.file.url,\r\n  }\r\n\r\nreturn{\r\n  props: {\r\n    episode\r\n  },\r\n  revalidate: 60 *60  *24 \r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}